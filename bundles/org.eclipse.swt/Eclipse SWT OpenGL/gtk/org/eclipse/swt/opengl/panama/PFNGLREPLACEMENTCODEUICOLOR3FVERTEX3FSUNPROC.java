// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC {

    void apply(int x0, float x1, float x2, float x3, float x4, float x5, float x6);
    static NativeSymbol allocate(PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC.class, fi, constants$915.PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC$FUNC, "(IFFFFFF)V", scope);
    }
    static PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC::" + Long.toHexString(addr.toRawLongValue()), addr, scope);
return (int x0, float x1, float x2, float x3, float x4, float x5, float x6) -> {
            try {
                constants$915.PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC$MH.invokeExact(symbol, x0, x1, x2, x3, x4, x5, x6);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


