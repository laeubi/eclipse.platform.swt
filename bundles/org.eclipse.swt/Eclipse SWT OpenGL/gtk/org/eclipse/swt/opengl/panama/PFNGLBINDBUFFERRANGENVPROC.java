// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface PFNGLBINDBUFFERRANGENVPROC {

    void apply(int x0, int x1, int x2, long x3, long x4);
    static NativeSymbol allocate(PFNGLBINDBUFFERRANGENVPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLBINDBUFFERRANGENVPROC.class, fi, constants$820.PFNGLBINDBUFFERRANGENVPROC$FUNC, "(IIIJJ)V", scope);
    }
    static PFNGLBINDBUFFERRANGENVPROC ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("PFNGLBINDBUFFERRANGENVPROC::" + Long.toHexString(addr.toRawLongValue()), addr, scope);
return (int x0, int x1, int x2, long x3, long x4) -> {
            try {
                constants$820.PFNGLBINDBUFFERRANGENVPROC$MH.invokeExact(symbol, x0, x1, x2, x3, x4);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


