// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface PFNGLPROGRAMUNIFORM1I64NVPROC {

    void apply(int x0, int x1, long x2);
    static NativeSymbol allocate(PFNGLPROGRAMUNIFORM1I64NVPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLPROGRAMUNIFORM1I64NVPROC.class, fi, constants$462.PFNGLPROGRAMUNIFORM1I64NVPROC$FUNC, "(IIJ)V", scope);
    }
    static PFNGLPROGRAMUNIFORM1I64NVPROC ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("PFNGLPROGRAMUNIFORM1I64NVPROC::" + Long.toHexString(addr.toRawLongValue()), addr, scope);
return (int x0, int x1, long x2) -> {
            try {
                constants$462.PFNGLPROGRAMUNIFORM1I64NVPROC$MH.invokeExact(symbol, x0, x1, x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


